plugins {
    id "java-library"
    id 'maven-publish'
}

group = 'com.github.figaf'
version = '2.7'

ext {
    enableSnapshotsForDependencyResolutionAndPublishing = project.findProperty('enableSnapshots') ?: 'false'
    snapshotsRepoUrl = project.findProperty('snapshotsRepoUrl') ?: ''
    snapshotsRepoUsername = project.findProperty('snapshotsRepoUsername') ?: ''
    snapshotsRepoPassword = project.findProperty('snapshotsRepoPassword') ?: ''

    lombokVersion = '1.18.34'
    slf4jVersion = '2.0.16'
    logbackVersion = '1.5.7'
    commonsCollectionsVersion = '4.4'
    commonsLangVersion = '3.17.0'
    commonsCodecVersion = '1.17.1'
    commonsTextVersion = '1.12.0'
    commonsIoVersion = '2.16.1'
    httpClientVersion = '5.3.1'
    springVersion = '6.1.14'
    springSecurityVersion = '6.3.4'
    jsonVersion = '20240303'
    jacksonVersion = '2.17.2'
    jsoupVersion = '1.18.1'
    sapTokenClientVersion = '3.5.3'
    icu4jVersion = '75.1'
    dom4jVersion = '2.1.4'
    jacksonVersion = '2.17.2'
    proxyVoleVersion = '1.1.5'
}

repositories {
    mavenLocal()
    mavenCentral()
    if (enableSnapshotsForDependencyResolutionAndPublishing == 'true') {
        maven {
            url "$snapshotsRepoUrl/content/groups/public/"
            allowInsecureProtocol true
            credentials {
                username "$snapshotsRepoUsername"
                password "$snapshotsRepoPassword"
            }
        }
    }
}

dependencies {

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    api "org.apache.commons:commons-lang3:${commonsLangVersion}"
    api "org.apache.commons:commons-collections4:${commonsCollectionsVersion}"
    api "commons-io:commons-io:${commonsIoVersion}"
    api "commons-codec:commons-codec:${commonsCodecVersion}"
    api "org.apache.httpcomponents.client5:httpclient5:${httpClientVersion}"
    api "org.springframework:spring-web:${springVersion}"
    api "org.springframework.security:spring-security-oauth2-client:${springSecurityVersion}"
    api "org.json:json:${jsonVersion}"
    api "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"
    api "com.sap.cloud.security.xsuaa:token-client:${sapTokenClientVersion}"

    implementation "org.jsoup:jsoup:${jsoupVersion}"
    implementation ("org.bidib.com.github.markusbernhardt:proxy-vole:${proxyVoleVersion}") {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

configurations.configureEach {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

java {
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            def snapshotsRepoUrl = "$snapshotsRepoUrl/content/repositories/snapshots"
            url snapshotsRepoUrl
            allowInsecureProtocol true
            credentials {
                username snapshotsRepoUsername
                password snapshotsRepoPassword
            }
        }
    }
}

tasks.withType(PublishToMavenRepository).configureEach {
    doFirst {
        if (enableSnapshotsForDependencyResolutionAndPublishing != 'true') {
            throw new GradleException("It's not possible to perform publishing because property 'enableSnapshots' " +
                "is not configured or set to 'false'")
        }
        // Prevent release publishing
        if (!version.endsWith("-SNAPSHOT")) {
            throw new GradleException("Release publishing is not allowed, it's done by JitPack")
        }
    }
}
